{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "social",
      "outputs": [
        {
          "internalType": "contract Social",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectPostsInit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCreatePost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        }
      ],
      "name": "testFuzz_CreatePost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b50611f4b8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637233f2be11610097578063ba414fa611610066578063ba414fa6146101d2578063d520d36b146101ea578063e20c9f71146101f2578063fa7626d4146101fa57600080fd5b80637233f2be1461018257806385226c81146101ad578063916a17c6146101c2578063b5508aa9146101ca57600080fd5b80633e5e3c23116100d35780633e5e3c231461014a5780633f7286f4146101525780634e070ccb1461015a57806366d9a9a01461016d57600080fd5b80630a9254e41461010557806315168d621461010f5780631ed7831c146101175780632ade388014610135575b600080fd5b61010d610207565b005b61010d610252565b61011f6102ce565b60405161012c9190611092565b60405180910390f35b61013d610330565b60405161012c919061112f565b61011f610472565b61011f6104d2565b61010d610168366004611287565b610532565b6101756106d6565b60405161012c9190611307565b601c54610195906001600160a01b031681565b6040516001600160a01b03909116815260200161012c565b6101b56107bc565b60405161012c91906113ba565b61017561088c565b6101b5610972565b6101da610a42565b604051901515815260200161012c565b61010d610b6f565b61011f610cf9565b6007546101da9060ff1681565b60405161021390611085565b604051809103906000f08015801561022f573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055565b601c54604080516230561160e81b815290516102cc926001600160a01b03169163305611009160048083019260009291908290030181865afa15801561029c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c4919081019061141c565b516000610d59565b565b6060601480548060200260200160405190810160405280929190818152602001828054801561032657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610308575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101561046957600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156104525783829060005260206000200180546103c590611587565b80601f01602080910402602001604051908101604052809291908181526020018280546103f190611587565b801561043e5780601f106104135761010080835404028352916020019161043e565b820191906000526020600020905b81548152906001019060200180831161042157829003601f168201915b5050505050815260200190600101906103a6565b505050508152505081526020019060010190610354565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610326576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610308575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610326576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610308575050505050905090565b601c5460405163c7303c6160e01b81526001600160a01b039091169063c7303c61906105629084906004016115c1565b6020604051808303816000875af1158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a591906115db565b50601c54604080516230561160e81b8152905161063d926001600160a01b03169163305611009160048083019260009291908290030181865afa1580156105f0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610618919081019061141c565b60008151811061062a5761062a6115f4565b6020026020010151600001516001610d59565b601c54604080516230561160e81b815290516106d3926001600160a01b03169163305611009160048083019260009291908290030181865afa158015610687573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106af919081019061141c565b6000815181106106c1576106c16115f4565b60200260200101516060015182610e4c565b50565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156104695760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107a457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107665790505b505050505081525050815260200190600101906106fa565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156104695783829060005260206000200180546107ff90611587565b80601f016020809104026020016040519081016040528092919081815260200182805461082b90611587565b80156108785780601f1061084d57610100808354040283529160200191610878565b820191906000526020600020905b81548152906001019060200180831161085b57829003601f168201915b5050505050815260200190600101906107e0565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156104695760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561095a57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161091c5790505b505050505081525050815260200190600101906108b0565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156104695783829060005260206000200180546109b590611587565b80601f01602080910402602001604051908101604052809291908181526020018280546109e190611587565b8015610a2e5780601f10610a0357610100808354040283529160200191610a2e565b820191906000526020600020905b815481529060010190602001808311610a1157829003601f168201915b505050505081526020019060010190610996565b600754600090610100900460ff1615610a645750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b6a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610af2917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161160a565b60408051601f1981840301815290829052610b0c9161163b565b6000604051808303816000865af19150503d8060008114610b49576040519150601f19603f3d011682016040523d82523d6000602084013e610b4e565b606091505b5091505080806020019051810190610b669190611657565b9150505b919050565b601c5460405163c7303c6160e01b81526020600482015260096024820152681d195cdd081c1bdcdd60ba1b60448201526001600160a01b039091169063c7303c61906064016020604051808303816000875af1158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf791906115db565b50601c54604080516230561160e81b81529051610c42926001600160a01b03169163305611009160048083019260009291908290030181865afa1580156105f0573d6000803e3d6000fd5b601c54604080516230561160e81b815290516102cc926001600160a01b03169163305611009160048083019260009291908290030181865afa158015610c8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb4919081019061141c565b600081518110610cc657610cc66115f4565b602002602001015160600151604051806040016040528060098152602001681d195cdd081c1bdcdd60ba1b815250610e4c565b60606013805480602002602001604051908101604052809291908181526020018280548015610326576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610308575050505050905090565b808214610e48577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610dca9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051610e019190611679565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051610e3891906116b1565b60405180910390a1610e48610f79565b5050565b80604051602001610e5d919061163b565b6040516020818303038152906040528051906020012082604051602001610e84919061163b565b6040516020818303038152906040528051906020012014610e48577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610f0b9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051610f4291906116db565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610e38919061171f565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156110745760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611013929160200161160a565b60408051601f198184030181529082905261102d9161163b565b6000604051808303816000865af19150503d806000811461106a576040519150601f19603f3d011682016040523d82523d6000602084013e61106f565b606091505b505050505b6007805461ff001916610100179055565b6107cc8061174a83390190565b6020808252825182820181905260009190848201906040850190845b818110156110d35783516001600160a01b0316835292840192918401916001016110ae565b50909695505050505050565b60005b838110156110fa5781810151838201526020016110e2565b50506000910152565b6000815180845261111b8160208601602086016110df565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156111df57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156111c957605f198985030183526111b7848651611103565b948e01949350918d019160010161119b565b505050978a019794505091880191600101611156565b50919a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611228576112286111ef565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611257576112576111ef565b604052919050565b600067ffffffffffffffff821115611279576112796111ef565b50601f01601f191660200190565b60006020828403121561129957600080fd5b813567ffffffffffffffff8111156112b057600080fd5b8201601f810184136112c157600080fd5b80356112d46112cf8261125f565b61122e565b8181528560208385010111156112e957600080fd5b81602084016020830137600091810160200191909152949350505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156113ab57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156113965783516001600160e01b0319168252928b019260019290920191908b019061136c565b50978a0197955050509187019160010161132f565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561140f57603f198886030184526113fd858351611103565b945092850192908501906001016113e1565b5092979650505050505050565b6000602080838503121561142f57600080fd5b825167ffffffffffffffff8082111561144757600080fd5b818501915085601f83011261145b57600080fd5b81518181111561146d5761146d6111ef565b8060051b61147c85820161122e565b918252838101850191858101908984111561149657600080fd5b86860192505b8383101561157a578251858111156114b45760008081fd5b86016080818c03601f19018113156114cc5760008081fd5b6114d4611205565b828a015181526040808401516001600160a01b03811681146114f65760008081fd5b828c0152606084810151828401529284015192898411156115175760008081fd5b83850194508e603f86011261152e57600093508384fd5b8b85015193506115406112cf8561125f565b8481528f838688010111156115555760008081fd5b611564858e83018589016110df565b908301525084525050918601919086019061149c565b9998505050505050505050565b600181811c9082168061159b57607f821691505b6020821081036115bb57634e487b7160e01b600052602260045260246000fd5b50919050565b6020815260006115d46020830184611103565b9392505050565b6000602082840312156115ed57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6001600160e01b031983168152815160009061162d8160048501602087016110df565b919091016004019392505050565b6000825161164d8184602087016110df565b9190910192915050565b60006020828403121561166957600080fd5b815180151581146115d457600080fd5b6040815260006116a360408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006116a360408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600061170560408301600a8152690808080808081319599d60b21b602082015260400190565b82810360208401526117178185611103565b949350505050565b60408152600061170560408301600a8152690808080808149a59da1d60b21b60208201526040019056fe608060405234801561001057600080fd5b506107ac806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630b1e7f83146100465780633056110014610072578063c7303c6114610087575b600080fd5b61005961005436600461042f565b6100a8565b604051610069949392919061048e565b60405180910390f35b61007a61017a565b6040516100699190610508565b61009a61009536600461056a565b610296565b604051908152602001610069565b600081815481106100b857600080fd5b600091825260209091206004909102018054600182015460028301546003840180549395506001600160a01b039092169390929091906100f7906105dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610123906105dc565b80156101705780601f1061014557610100808354040283529160200191610170565b820191906000526020600020905b81548152906001019060200180831161015357829003601f168201915b5050505050905084565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561028d57600084815260209081902060408051608081018252600486029092018054835260018101546001600160a01b0316938301939093526002830154908201526003820180549192916060840191906101fc906105dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610228906105dc565b80156102755780601f1061024a57610100808354040283529160200191610275565b820191906000526020600020905b81548152906001019060200180831161025857829003601f168201915b5050505050815250508152602001906001019061019e565b50505050905090565b6000805481906102a7906001610616565b905060006040518060800160405280838152602001336001600160a01b0316815260200142815260200186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508054600181018255908052825160049091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810191825560208401517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564820180546001600160a01b039092166001600160a01b031990921691909117905560408401517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565820155606084015193945084939192507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56601906103eb908261069c565b5050507f7249910df7f90feb44bb01f75675ae991d3e45a52cab751cab0561298831c4838160405161041d919061075c565b60405180910390a15090505b92915050565b60006020828403121561044157600080fd5b5035919050565b6000815180845260005b8181101561046e57602081850181015186830182015201610452565b506000602082860101526020601f19601f83011685010191505092915050565b84815260018060a01b03841660208201528260408201526080606082015260006104bb6080830184610448565b9695505050505050565b8051825260018060a01b0360208201511660208301526040810151604083015260006060820151608060608501526105006080850182610448565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561055d57603f1988860301845261054b8583516104c5565b9450928501929085019060010161052f565b5092979650505050505050565b6000806020838503121561057d57600080fd5b823567ffffffffffffffff8082111561059557600080fd5b818501915085601f8301126105a957600080fd5b8135818111156105b857600080fd5b8660208285010111156105ca57600080fd5b60209290920196919550909350505050565b600181811c908216806105f057607f821691505b60208210810361061057634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561042957634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f82111561069757600081815260208120601f850160051c810160208610156106745750805b601f850160051c820191505b8181101561069357828155600101610680565b5050505b505050565b815167ffffffffffffffff8111156106b6576106b6610637565b6106ca816106c484546105dc565b8461064d565b602080601f8311600181146106ff57600084156106e75750858301515b600019600386901b1c1916600185901b178555610693565b600085815260208120601f198616915b8281101561072e5788860151825594840194600190910190840161070f565b508582101561074c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600061076f60208301846104c5565b939250505056fea2646970667358221220e8e51a3fb023efecb5da08086a6df8ba69bb880c536d49f51cc9aea217372ee264736f6c63430008150033a2646970667358221220a2d215223decc6576fbe78b27fd3b7e5646a795b063aba5d93f8b52893ef437364736f6c63430008150033",
    "sourceMap": "166:911:19:-:0;;;1572:26:1;;;1594:4;-1:-1:-1;;1572:26:1;;;;;;;;3126:44:4;;;;;;;;;;;166:911:19;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80637233f2be11610097578063ba414fa611610066578063ba414fa6146101d2578063d520d36b146101ea578063e20c9f71146101f2578063fa7626d4146101fa57600080fd5b80637233f2be1461018257806385226c81146101ad578063916a17c6146101c2578063b5508aa9146101ca57600080fd5b80633e5e3c23116100d35780633e5e3c231461014a5780633f7286f4146101525780634e070ccb1461015a57806366d9a9a01461016d57600080fd5b80630a9254e41461010557806315168d621461010f5780631ed7831c146101175780632ade388014610135575b600080fd5b61010d610207565b005b61010d610252565b61011f6102ce565b60405161012c9190611092565b60405180910390f35b61013d610330565b60405161012c919061112f565b61011f610472565b61011f6104d2565b61010d610168366004611287565b610532565b6101756106d6565b60405161012c9190611307565b601c54610195906001600160a01b031681565b6040516001600160a01b03909116815260200161012c565b6101b56107bc565b60405161012c91906113ba565b61017561088c565b6101b5610972565b6101da610a42565b604051901515815260200161012c565b61010d610b6f565b61011f610cf9565b6007546101da9060ff1681565b60405161021390611085565b604051809103906000f08015801561022f573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055565b601c54604080516230561160e81b815290516102cc926001600160a01b03169163305611009160048083019260009291908290030181865afa15801561029c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c4919081019061141c565b516000610d59565b565b6060601480548060200260200160405190810160405280929190818152602001828054801561032657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610308575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101561046957600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156104525783829060005260206000200180546103c590611587565b80601f01602080910402602001604051908101604052809291908181526020018280546103f190611587565b801561043e5780601f106104135761010080835404028352916020019161043e565b820191906000526020600020905b81548152906001019060200180831161042157829003601f168201915b5050505050815260200190600101906103a6565b505050508152505081526020019060010190610354565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610326576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610308575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610326576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610308575050505050905090565b601c5460405163c7303c6160e01b81526001600160a01b039091169063c7303c61906105629084906004016115c1565b6020604051808303816000875af1158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a591906115db565b50601c54604080516230561160e81b8152905161063d926001600160a01b03169163305611009160048083019260009291908290030181865afa1580156105f0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610618919081019061141c565b60008151811061062a5761062a6115f4565b6020026020010151600001516001610d59565b601c54604080516230561160e81b815290516106d3926001600160a01b03169163305611009160048083019260009291908290030181865afa158015610687573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106af919081019061141c565b6000815181106106c1576106c16115f4565b60200260200101516060015182610e4c565b50565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156104695760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107a457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107665790505b505050505081525050815260200190600101906106fa565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156104695783829060005260206000200180546107ff90611587565b80601f016020809104026020016040519081016040528092919081815260200182805461082b90611587565b80156108785780601f1061084d57610100808354040283529160200191610878565b820191906000526020600020905b81548152906001019060200180831161085b57829003601f168201915b5050505050815260200190600101906107e0565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156104695760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561095a57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161091c5790505b505050505081525050815260200190600101906108b0565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156104695783829060005260206000200180546109b590611587565b80601f01602080910402602001604051908101604052809291908181526020018280546109e190611587565b8015610a2e5780601f10610a0357610100808354040283529160200191610a2e565b820191906000526020600020905b815481529060010190602001808311610a1157829003601f168201915b505050505081526020019060010190610996565b600754600090610100900460ff1615610a645750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b6a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610af2917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161160a565b60408051601f1981840301815290829052610b0c9161163b565b6000604051808303816000865af19150503d8060008114610b49576040519150601f19603f3d011682016040523d82523d6000602084013e610b4e565b606091505b5091505080806020019051810190610b669190611657565b9150505b919050565b601c5460405163c7303c6160e01b81526020600482015260096024820152681d195cdd081c1bdcdd60ba1b60448201526001600160a01b039091169063c7303c61906064016020604051808303816000875af1158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf791906115db565b50601c54604080516230561160e81b81529051610c42926001600160a01b03169163305611009160048083019260009291908290030181865afa1580156105f0573d6000803e3d6000fd5b601c54604080516230561160e81b815290516102cc926001600160a01b03169163305611009160048083019260009291908290030181865afa158015610c8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb4919081019061141c565b600081518110610cc657610cc66115f4565b602002602001015160600151604051806040016040528060098152602001681d195cdd081c1bdcdd60ba1b815250610e4c565b60606013805480602002602001604051908101604052809291908181526020018280548015610326576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610308575050505050905090565b808214610e48577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610dca9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051610e019190611679565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051610e3891906116b1565b60405180910390a1610e48610f79565b5050565b80604051602001610e5d919061163b565b6040516020818303038152906040528051906020012082604051602001610e84919061163b565b6040516020818303038152906040528051906020012014610e48577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610f0b9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051610f4291906116db565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610e38919061171f565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156110745760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611013929160200161160a565b60408051601f198184030181529082905261102d9161163b565b6000604051808303816000865af19150503d806000811461106a576040519150601f19603f3d011682016040523d82523d6000602084013e61106f565b606091505b505050505b6007805461ff001916610100179055565b6107cc8061174a83390190565b6020808252825182820181905260009190848201906040850190845b818110156110d35783516001600160a01b0316835292840192918401916001016110ae565b50909695505050505050565b60005b838110156110fa5781810151838201526020016110e2565b50506000910152565b6000815180845261111b8160208601602086016110df565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156111df57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156111c957605f198985030183526111b7848651611103565b948e01949350918d019160010161119b565b505050978a019794505091880191600101611156565b50919a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611228576112286111ef565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611257576112576111ef565b604052919050565b600067ffffffffffffffff821115611279576112796111ef565b50601f01601f191660200190565b60006020828403121561129957600080fd5b813567ffffffffffffffff8111156112b057600080fd5b8201601f810184136112c157600080fd5b80356112d46112cf8261125f565b61122e565b8181528560208385010111156112e957600080fd5b81602084016020830137600091810160200191909152949350505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156113ab57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156113965783516001600160e01b0319168252928b019260019290920191908b019061136c565b50978a0197955050509187019160010161132f565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561140f57603f198886030184526113fd858351611103565b945092850192908501906001016113e1565b5092979650505050505050565b6000602080838503121561142f57600080fd5b825167ffffffffffffffff8082111561144757600080fd5b818501915085601f83011261145b57600080fd5b81518181111561146d5761146d6111ef565b8060051b61147c85820161122e565b918252838101850191858101908984111561149657600080fd5b86860192505b8383101561157a578251858111156114b45760008081fd5b86016080818c03601f19018113156114cc5760008081fd5b6114d4611205565b828a015181526040808401516001600160a01b03811681146114f65760008081fd5b828c0152606084810151828401529284015192898411156115175760008081fd5b83850194508e603f86011261152e57600093508384fd5b8b85015193506115406112cf8561125f565b8481528f838688010111156115555760008081fd5b611564858e83018589016110df565b908301525084525050918601919086019061149c565b9998505050505050505050565b600181811c9082168061159b57607f821691505b6020821081036115bb57634e487b7160e01b600052602260045260246000fd5b50919050565b6020815260006115d46020830184611103565b9392505050565b6000602082840312156115ed57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6001600160e01b031983168152815160009061162d8160048501602087016110df565b919091016004019392505050565b6000825161164d8184602087016110df565b9190910192915050565b60006020828403121561166957600080fd5b815180151581146115d457600080fd5b6040815260006116a360408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006116a360408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600061170560408301600a8152690808080808081319599d60b21b602082015260400190565b82810360208401526117178185611103565b949350505050565b60408152600061170560408301600a8152690808080808149a59da1d60b21b60208201526040019056fe608060405234801561001057600080fd5b506107ac806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630b1e7f83146100465780633056110014610072578063c7303c6114610087575b600080fd5b61005961005436600461042f565b6100a8565b604051610069949392919061048e565b60405180910390f35b61007a61017a565b6040516100699190610508565b61009a61009536600461056a565b610296565b604051908152602001610069565b600081815481106100b857600080fd5b600091825260209091206004909102018054600182015460028301546003840180549395506001600160a01b039092169390929091906100f7906105dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610123906105dc565b80156101705780601f1061014557610100808354040283529160200191610170565b820191906000526020600020905b81548152906001019060200180831161015357829003601f168201915b5050505050905084565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561028d57600084815260209081902060408051608081018252600486029092018054835260018101546001600160a01b0316938301939093526002830154908201526003820180549192916060840191906101fc906105dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610228906105dc565b80156102755780601f1061024a57610100808354040283529160200191610275565b820191906000526020600020905b81548152906001019060200180831161025857829003601f168201915b5050505050815250508152602001906001019061019e565b50505050905090565b6000805481906102a7906001610616565b905060006040518060800160405280838152602001336001600160a01b0316815260200142815260200186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508054600181018255908052825160049091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810191825560208401517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564820180546001600160a01b039092166001600160a01b031990921691909117905560408401517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565820155606084015193945084939192507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56601906103eb908261069c565b5050507f7249910df7f90feb44bb01f75675ae991d3e45a52cab751cab0561298831c4838160405161041d919061075c565b60405180910390a15090505b92915050565b60006020828403121561044157600080fd5b5035919050565b6000815180845260005b8181101561046e57602081850181015186830182015201610452565b506000602082860101526020601f19601f83011685010191505092915050565b84815260018060a01b03841660208201528260408201526080606082015260006104bb6080830184610448565b9695505050505050565b8051825260018060a01b0360208201511660208301526040810151604083015260006060820151608060608501526105006080850182610448565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561055d57603f1988860301845261054b8583516104c5565b9450928501929085019060010161052f565b5092979650505050505050565b6000806020838503121561057d57600080fd5b823567ffffffffffffffff8082111561059557600080fd5b818501915085601f8301126105a957600080fd5b8135818111156105b857600080fd5b8660208285010111156105ca57600080fd5b60209290920196919550909350505050565b600181811c908216806105f057607f821691505b60208210810361061057634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561042957634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f82111561069757600081815260208120601f850160051c810160208610156106745750805b601f850160051c820191505b8181101561069357828155600101610680565b5050505b505050565b815167ffffffffffffffff8111156106b6576106b6610637565b6106ca816106c484546105dc565b8461064d565b602080601f8311600181146106ff57600084156106e75750858301515b600019600386901b1c1916600185901b178555610693565b600085815260208120601f198616915b8281101561072e5788860151825594840194600190910190840161070f565b508582101561074c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600061076f60208301846104c5565b939250505056fea2646970667358221220e8e51a3fb023efecb5da08086a6df8ba69bb880c536d49f51cc9aea217372ee264736f6c63430008150033a2646970667358221220a2d215223decc6576fbe78b27fd3b7e5646a795b063aba5d93f8b52893ef437364736f6c63430008150033",
    "sourceMap": "166:911:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;227:62;;;:::i;:::-;;295:96;;;:::i;2452:134:7:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;597:212:19:-;;;;;;:::i;:::-;;:::i;2738:178:7:-;;;:::i;:::-;;;;;;;:::i;200:20:19:-;;;;;-1:-1:-1;;;;;200:20:19;;;;;;-1:-1:-1;;;;;6244:32:20;;;6226:51;;6214:2;6199:18;200:20:19;6067:216:20;2592:140:7;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;2157:141::-;;;:::i;1819:584:1:-;;;:::i;:::-;;;7261:14:20;;7254:22;7236:41;;7224:2;7209:18;1819:584:1;7096:187:20;397:194:19;;;:::i;2304:142:7:-;;;:::i;1572:26:1:-;;;;;;;;;227:62:19;270:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:6:19;:21;;-1:-1:-1;;;;;;261:21:19;-1:-1:-1;;;;;261:21:19;;;;;;;;;;227:62::o;295:96::-;353:6;;:20;;;-1:-1:-1;;;353:20:19;;;;344:40;;-1:-1:-1;;;;;353:6:19;;:18;;:20;;;;;:6;;:20;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;353:20:19;;;;;;;;;;;;:::i;:::-;:27;382:1;344:8;:40::i;:::-;295:96::o;2452:134:7:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:7;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:7;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:7;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;597:212:19:-;666:6;;:26;;-1:-1:-1;;;666:26:19;;-1:-1:-1;;;;;666:6:19;;;;:17;;:26;;684:7;;666:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;712:6:19;;:20;;;-1:-1:-1;;;712:20:19;;;;703:39;;-1:-1:-1;;;;;712:6:19;;:18;;:20;;;;;:6;;:20;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;712:20:19;;;;;;;;;;;;:::i;:::-;733:1;712:23;;;;;;;;:::i;:::-;;;;;;;:26;;;740:1;703:8;:39::i;:::-;761:6;;:20;;;-1:-1:-1;;;761:20:19;;;;752:50;;-1:-1:-1;;;;;761:6:19;;:18;;:20;;;;;:6;;:20;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;761:20:19;;;;;;;;;;;;:::i;:::-;782:1;761:23;;;;;;;;:::i;:::-;;;;;;;:31;;;794:7;752:8;:50::i;:::-;597:212;:::o;2738:178:7:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:1;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;10947:51:20;;;-1:-1:-1;;;11014:18:20;;;11007:34;2196:43:1;;;;;;;;;10920:18:20;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;397:194:19:-;440:6;;:30;;-1:-1:-1;;;440:30:19;;12217:2:20;440:30:19;;;12199:21:20;12256:1;12236:18;;;12229:29;-1:-1:-1;;;12274:18:20;;;12267:39;-1:-1:-1;;;;;440:6:19;;;;:17;;12323:18:20;;440:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;490:6:19;;:20;;;-1:-1:-1;;;490:20:19;;;;481:39;;-1:-1:-1;;;;;490:6:19;;:18;;:20;;;;;:6;;:20;;;;;;;:6;:20;;;;;;;;;;;;;;481:39;539:6;;:20;;;-1:-1:-1;;;539:20:19;;;;530:54;;-1:-1:-1;;;;;539:6:19;;:18;;:20;;;;;:6;;:20;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;539:20:19;;;;;;;;;;;;:::i;:::-;560:1;539:23;;;;;;;;:::i;:::-;;;;;;;:31;;;530:54;;;;;;;;;;;;;-1:-1:-1;;;530:54:19;;;:8;:54::i;2304:142:7:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:7;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;5209:262:1:-;5271:1;5266;:6;5262:203;;5293:41;;;;;12554:2:20;12536:21;;;12593:2;12573:18;;;12566:30;12632:34;12627:2;12612:18;;12605:62;-1:-1:-1;;;12698:2:20;12683:18;;12676:32;12740:3;12725:19;;12352:398;5293:41:1;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;17902:344::-;18038:1;18021:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18011:30;;;;;;18004:1;17987:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;17977:30;;;;;;:64;17973:267;;18062:43;;;;;14285:2:20;14267:21;;;14324:2;14304:18;;;14297:30;14363:34;14358:2;14343:18;;14336:62;-1:-1:-1;;;14429:2:20;14414:18;;14407:34;14473:3;14458:19;;14083:400;18062:43:1;;;;;;;;18124:33;18155:1;18124:33;;;;;;:::i;:::-;;;;;;;;18176;18207:1;18176:33;;;;;;:::i;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;15580:51:20;;;-1:-1:-1;;;15647:18:20;;;15640:34;;;;2712:4:1;15690:18:20;;;15683:34;2489:11:1;;1671:64;2586:43;;15553:18:20;;2652:67:1;;;-1:-1:-1;;2652:67:1;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:1;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:1;2820:7;:14;;-1:-1:-1;;2820:14:1;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;14:658:20:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:20;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:20;;14:658;-1:-1:-1;;;;;;14:658:20:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:20;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:20;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:20:o;1208:1742::-;1441:2;1493:21;;;1563:13;;1466:18;;;1585:22;;;1412:4;;1441:2;1626;;1644:18;;;;1681:1;1724:15;;;1709:31;;1705:40;;1768:15;;;1412:4;;1832:1089;1848:6;1843:3;1840:15;1832:1089;;;-1:-1:-1;;1917:22:20;;;1913:36;1901:49;;1973:13;;2060:9;;-1:-1:-1;;;;;2056:35:20;2041:51;;2131:11;;2125:18;2163:15;;;2156:27;;;2244:19;;2013:15;;;2276:24;;;2457:21;;;;2323:2;2405:17;;;2393:30;;2389:39;;;2347:15;;;;2502:1;2516:296;2532:8;2527:3;2524:17;2516:296;;;2638:2;2634:7;2625:6;2617;2613:19;2609:33;2602:5;2595:48;2670:42;2705:6;2694:8;2688:15;2670:42;:::i;:::-;2741:17;;;;2660:52;-1:-1:-1;2784:14:20;;;;2560:1;2551:11;2516:296;;;-1:-1:-1;;;2899:12:20;;;;2835:6;-1:-1:-1;;2864:15:20;;;;1874:1;1865:11;1832:1089;;;-1:-1:-1;2938:6:20;;1208:1742;-1:-1:-1;;;;;;;;;;1208:1742:20:o;2955:127::-;3016:10;3011:3;3007:20;3004:1;2997:31;3047:4;3044:1;3037:15;3071:4;3068:1;3061:15;3087:253;3159:2;3153:9;3201:4;3189:17;;3236:18;3221:34;;3257:22;;;3218:62;3215:88;;;3283:18;;:::i;:::-;3319:2;3312:22;3087:253;:::o;3345:275::-;3416:2;3410:9;3481:2;3462:13;;-1:-1:-1;;3458:27:20;3446:40;;3516:18;3501:34;;3537:22;;;3498:62;3495:88;;;3563:18;;:::i;:::-;3599:2;3592:22;3345:275;;-1:-1:-1;3345:275:20:o;3625:187::-;3674:4;3707:18;3699:6;3696:30;3693:56;;;3729:18;;:::i;:::-;-1:-1:-1;3795:2:20;3774:15;-1:-1:-1;;3770:29:20;3801:4;3766:40;;3625:187::o;3817:673::-;3886:6;3939:2;3927:9;3918:7;3914:23;3910:32;3907:52;;;3955:1;3952;3945:12;3907:52;3995:9;3982:23;4028:18;4020:6;4017:30;4014:50;;;4060:1;4057;4050:12;4014:50;4083:22;;4136:4;4128:13;;4124:27;-1:-1:-1;4114:55:20;;4165:1;4162;4155:12;4114:55;4201:2;4188:16;4226:49;4242:32;4271:2;4242:32;:::i;:::-;4226:49;:::i;:::-;4298:2;4291:5;4284:17;4338:7;4333:2;4328;4324;4320:11;4316:20;4313:33;4310:53;;;4359:1;4356;4349:12;4310:53;4414:2;4409;4405;4401:11;4396:2;4389:5;4385:14;4372:45;4458:1;4437:14;;;4453:2;4433:23;4426:34;;;;4441:5;3817:673;-1:-1:-1;;;;3817:673:20:o;4495:1567::-;4697:4;4726:2;4766;4755:9;4751:18;4796:2;4785:9;4778:21;4819:6;4854;4848:13;4885:6;4877;4870:22;4911:2;4901:12;;4944:2;4933:9;4929:18;4922:25;;5006:2;4996:6;4993:1;4989:14;4978:9;4974:30;4970:39;5044:2;5036:6;5032:15;5065:1;5086;5096:937;5112:6;5107:3;5104:15;5096:937;;;5181:22;;;-1:-1:-1;;5177:36:20;5165:49;;5237:13;;5324:9;;-1:-1:-1;;;;;5320:35:20;5305:51;;5395:11;;5389:18;5427:15;;;5420:27;;;5508:19;;5277:15;;;5540:24;;;5630:21;;;;5675:1;;5598:2;5586:15;;;5689:236;5705:8;5700:3;5697:17;5689:236;;;5786:15;;-1:-1:-1;;;;;;5782:42:20;5768:57;;5894:17;;;;5733:1;5724:11;;;;;5851:14;;;;5689:236;;;-1:-1:-1;6011:12:20;;;;5948:5;-1:-1:-1;;;5976:15:20;;;;5138:1;5129:11;5096:937;;;-1:-1:-1;6050:6:20;;4495:1567;-1:-1:-1;;;;;;;;;4495:1567:20:o;6288:803::-;6450:4;6479:2;6519;6508:9;6504:18;6549:2;6538:9;6531:21;6572:6;6607;6601:13;6638:6;6630;6623:22;6676:2;6665:9;6661:18;6654:25;;6738:2;6728:6;6725:1;6721:14;6710:9;6706:30;6702:39;6688:53;;6776:2;6768:6;6764:15;6797:1;6807:255;6821:6;6818:1;6815:13;6807:255;;;6914:2;6910:7;6898:9;6890:6;6886:22;6882:36;6877:3;6870:49;6942:40;6975:6;6966;6960:13;6942:40;:::i;:::-;6932:50;-1:-1:-1;7040:12:20;;;;7005:15;;;;6843:1;6836:9;6807:255;;;-1:-1:-1;7079:6:20;;6288:803;-1:-1:-1;;;;;;;6288:803:20:o;7288:2549::-;7403:6;7434:2;7477;7465:9;7456:7;7452:23;7448:32;7445:52;;;7493:1;7490;7483:12;7445:52;7526:9;7520:16;7555:18;7596:2;7588:6;7585:14;7582:34;;;7612:1;7609;7602:12;7582:34;7650:6;7639:9;7635:22;7625:32;;7695:7;7688:4;7684:2;7680:13;7676:27;7666:55;;7717:1;7714;7707:12;7666:55;7746:2;7740:9;7768:2;7764;7761:10;7758:36;;;7774:18;;:::i;:::-;7820:2;7817:1;7813:10;7843:28;7867:2;7863;7859:11;7843:28;:::i;:::-;7905:15;;;7975:11;;;7971:20;;;7936:12;;;;8003:19;;;8000:39;;;8035:1;8032;8025:12;8000:39;8067:2;8063;8059:11;8048:22;;8079:1728;8095:6;8090:3;8087:15;8079:1728;;;8174:3;8168:10;8210:2;8197:11;8194:19;8191:109;;;8254:1;8283:2;8279;8272:14;8191:109;8323:20;;8366:4;8394:16;;;-1:-1:-1;;8390:30:20;8386:39;-1:-1:-1;8383:129:20;;;8466:1;8495:2;8491;8484:14;8383:129;8538:22;;:::i;:::-;8593:11;;;8587:18;8573:33;;8630:2;8666:12;;;8660:19;-1:-1:-1;;;;;8714:33:20;;8702:46;;8692:147;;8791:1;8821:3;8816;8809:16;8692:147;8859:14;;;8852:31;8907:2;8952:12;;;8946:19;8929:15;;;8922:44;9001:11;;;8995:18;;9029:16;;;9026:109;;;9087:1;9117:3;9112;9105:16;9026:109;9167:8;9163:2;9159:17;9148:28;;9217:7;9212:2;9207:3;9203:12;9199:26;9189:127;;9268:1;9257:12;;9298:3;9293;9286:16;9189:127;9355:2;9350:3;9346:12;9340:19;9329:30;;9385:50;9401:33;9430:3;9401:33;:::i;9385:50::-;9462:3;9455:5;9448:18;9510:7;9504:3;9498;9493;9489:13;9485:23;9482:36;9479:129;;;9560:1;9590:3;9585;9578:16;9479:129;9621:70;9687:3;9682:2;9675:5;9671:14;9665:3;9660;9656:13;9621:70;:::i;:::-;9711:15;;;9704:30;-1:-1:-1;9747:18:20;;-1:-1:-1;;8112:12:20;;;;9785;;;;8079:1728;;;9826:5;7288:2549;-1:-1:-1;;;;;;;;;7288:2549:20:o;9842:380::-;9921:1;9917:12;;;;9964;;;9985:61;;10039:4;10031:6;10027:17;10017:27;;9985:61;10092:2;10084:6;10081:14;10061:18;10058:38;10055:161;;10138:10;10133:3;10129:20;10126:1;10119:31;10173:4;10170:1;10163:15;10201:4;10198:1;10191:15;10055:161;;9842:380;;;:::o;10227:220::-;10376:2;10365:9;10358:21;10339:4;10396:45;10437:2;10426:9;10422:18;10414:6;10396:45;:::i;:::-;10388:53;10227:220;-1:-1:-1;;;10227:220:20:o;10452:184::-;10522:6;10575:2;10563:9;10554:7;10550:23;10546:32;10543:52;;;10591:1;10588;10581:12;10543:52;-1:-1:-1;10614:16:20;;10452:184;-1:-1:-1;10452:184:20:o;10641:127::-;10702:10;10697:3;10693:20;10690:1;10683:31;10733:4;10730:1;10723:15;10757:4;10754:1;10747:15;11052:384;-1:-1:-1;;;;;;11237:33:20;;11225:46;;11294:13;;11207:3;;11316:74;11294:13;11379:1;11370:11;;11363:4;11351:17;;11316:74;:::i;:::-;11410:16;;;;11428:1;11406:24;;11052:384;-1:-1:-1;;;11052:384:20:o;11441:287::-;11570:3;11608:6;11602:13;11624:66;11683:6;11678:3;11671:4;11663:6;11659:17;11624:66;:::i;:::-;11706:16;;;;;11441:287;-1:-1:-1;;11441:287:20:o;11733:277::-;11800:6;11853:2;11841:9;11832:7;11828:23;11824:32;11821:52;;;11869:1;11866;11859:12;11821:52;11901:9;11895:16;11954:5;11947:13;11940:21;11933:5;11930:32;11920:60;;11976:1;11973;11966:12;12919:348;13149:2;13138:9;13131:21;13112:4;13169:49;13214:2;13203:9;13199:18;12832:2;12820:15;;-1:-1:-1;;;12860:4:20;12851:14;;12844:36;12905:2;12896:12;;12755:159;13169:49;13161:57;;13254:6;13249:2;13238:9;13234:18;13227:34;12919:348;;;;:::o;13436:::-;13666:2;13655:9;13648:21;13629:4;13686:49;13731:2;13720:9;13716:18;13349:2;13337:15;;-1:-1:-1;;;13377:4:20;13368:14;;13361:36;13422:2;13413:12;;13272:159;14488:440;14738:2;14727:9;14720:21;14701:4;14764:49;14809:2;14798:9;14794:18;12832:2;12820:15;;-1:-1:-1;;;12860:4:20;12851:14;;12844:36;12905:2;12896:12;;12755:159;14764:49;14861:9;14853:6;14849:22;14844:2;14833:9;14829:18;14822:50;14889:33;14915:6;14907;14889:33;:::i;:::-;14881:41;14488:440;-1:-1:-1;;;;14488:440:20:o;14933:::-;15183:2;15172:9;15165:21;15146:4;15209:49;15254:2;15243:9;15239:18;13349:2;13337:15;;-1:-1:-1;;;13377:4:20;13368:14;;13361:36;13422:2;13413:12;;13272:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "social()": "7233f2be",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testCorrectPostsInit()": "15168d62",
    "testCreatePost()": "d520d36b",
    "testFuzz_CreatePost(string)": "4e070ccb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"social\",\"outputs\":[{\"internalType\":\"contract Social\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectPostsInit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCreatePost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"testFuzz_CreatePost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Social.t.sol\":\"SocialTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/Social.sol\":{\"keccak256\":\"0x91e6bf9130ed236a234d68a6a2b99eabced3923c3a01683cb7115617e1017722\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://48a170fc2998e6ce5a64b4cd2811e65d1360f5581f217df476b56bdcac67cb59\",\"dweb:/ipfs/QmWmP1HaoU5tzaK7ye6sumyzWhQMaodxdhwVyaKp5fYrbD\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"test/Social.t.sol\":{\"keccak256\":\"0x72640f156382eaa4e267fa6dd953c03ab1be891145a0459f62b796a230916b33\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ab9c0f76f3851be99cd63f400755de384a6be284441d1240d87d70cd8f190591\",\"dweb:/ipfs/QmfQdpKJDqBfsraQkScbe72zLx1vTTPhavZRMsMr55kcdS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "social",
          "outputs": [
            {
              "internalType": "contract Social",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectPostsInit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCreatePost"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "content",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_CreatePost"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Social.t.sol": "SocialTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Social.sol": {
        "keccak256": "0x91e6bf9130ed236a234d68a6a2b99eabced3923c3a01683cb7115617e1017722",
        "urls": [
          "bzz-raw://48a170fc2998e6ce5a64b4cd2811e65d1360f5581f217df476b56bdcac67cb59",
          "dweb:/ipfs/QmWmP1HaoU5tzaK7ye6sumyzWhQMaodxdhwVyaKp5fYrbD"
        ],
        "license": "UNLICENSED"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "test/Social.t.sol": {
        "keccak256": "0x72640f156382eaa4e267fa6dd953c03ab1be891145a0459f62b796a230916b33",
        "urls": [
          "bzz-raw://ab9c0f76f3851be99cd63f400755de384a6be284441d1240d87d70cd8f190591",
          "dweb:/ipfs/QmfQdpKJDqBfsraQkScbe72zLx1vTTPhavZRMsMr55kcdS"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Social.t.sol",
    "id": 43517,
    "exportedSymbols": {
      "Social": [
        69
      ],
      "SocialTest": [
        43516
      ],
      "Test": [
        12285
      ],
      "console2": [
        30180
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1039:19",
    "nodes": [
      {
        "id": 43420,
        "nodeType": "PragmaDirective",
        "src": "39:24:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 43423,
        "nodeType": "ImportDirective",
        "src": "65:50:19",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43517,
        "sourceUnit": 12286,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43421,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12285,
              "src": "73:4:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 43422,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30180,
              "src": "79:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43425,
        "nodeType": "ImportDirective",
        "src": "116:47:19",
        "nodes": [],
        "absolutePath": "contracts/Social.sol",
        "file": "../contracts/Social.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43517,
        "sourceUnit": 70,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43424,
              "name": "Social",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 69,
              "src": "124:6:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43516,
        "nodeType": "ContractDefinition",
        "src": "166:911:19",
        "nodes": [
          {
            "id": 43430,
            "nodeType": "VariableDeclaration",
            "src": "200:20:19",
            "nodes": [],
            "constant": false,
            "functionSelector": "7233f2be",
            "mutability": "mutable",
            "name": "social",
            "nameLocation": "214:6:19",
            "scope": 43516,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Social_$69",
              "typeString": "contract Social"
            },
            "typeName": {
              "id": 43429,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 43428,
                "name": "Social",
                "nameLocations": [
                  "200:6:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 69,
                "src": "200:6:19"
              },
              "referencedDeclaration": 69,
              "src": "200:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Social_$69",
                "typeString": "contract Social"
              }
            },
            "visibility": "public"
          },
          {
            "id": 43441,
            "nodeType": "FunctionDefinition",
            "src": "227:62:19",
            "nodes": [],
            "body": {
              "id": 43440,
              "nodeType": "Block",
              "src": "251:38:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 43438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43433,
                      "name": "social",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43430,
                      "src": "261:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Social_$69",
                        "typeString": "contract Social"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "270:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Social_$69_$",
                          "typeString": "function () returns (contract Social)"
                        },
                        "typeName": {
                          "id": 43435,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43434,
                            "name": "Social",
                            "nameLocations": [
                              "274:6:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 69,
                            "src": "274:6:19"
                          },
                          "referencedDeclaration": 69,
                          "src": "274:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Social_$69",
                            "typeString": "contract Social"
                          }
                        }
                      },
                      "id": 43437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "270:12:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Social_$69",
                        "typeString": "contract Social"
                      }
                    },
                    "src": "261:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Social_$69",
                      "typeString": "contract Social"
                    }
                  },
                  "id": 43439,
                  "nodeType": "ExpressionStatement",
                  "src": "261:21:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "236:5:19",
            "parameters": {
              "id": 43431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:2:19"
            },
            "returnParameters": {
              "id": 43432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:0:19"
            },
            "scope": 43516,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43453,
            "nodeType": "FunctionDefinition",
            "src": "295:96:19",
            "nodes": [],
            "body": {
              "id": 43452,
              "nodeType": "Block",
              "src": "334:57:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 43445,
                              "name": "social",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43430,
                              "src": "353:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Social_$69",
                                "typeString": "contract Social"
                              }
                            },
                            "id": 43446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "360:11:19",
                            "memberName": "getAllPosts",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 68,
                            "src": "353:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Post_$10_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function () view external returns (struct Social.Post memory[] memory)"
                            }
                          },
                          "id": 43447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "353:20:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Post_$10_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Social.Post memory[] memory"
                          }
                        },
                        "id": 43448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "374:6:19",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "353:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "382:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 43444,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2555,
                        2580,
                        2593,
                        2609,
                        2651,
                        2693,
                        2735,
                        2772,
                        2809,
                        2846,
                        390,
                        415,
                        445,
                        470,
                        529,
                        554,
                        584,
                        609,
                        2082,
                        2117
                      ],
                      "referencedDeclaration": 584,
                      "src": "344:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 43450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "344:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43451,
                  "nodeType": "ExpressionStatement",
                  "src": "344:40:19"
                }
              ]
            },
            "functionSelector": "15168d62",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectPostsInit",
            "nameLocation": "304:20:19",
            "parameters": {
              "id": 43442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:2:19"
            },
            "returnParameters": {
              "id": 43443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "334:0:19"
            },
            "scope": 43516,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43483,
            "nodeType": "FunctionDefinition",
            "src": "397:194:19",
            "nodes": [],
            "body": {
              "id": 43482,
              "nodeType": "Block",
              "src": "430:161:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7465737420706f7374",
                        "id": 43459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "458:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c82c94eb1dc2264bf2e4b62d6dba42b5ee19bae7058faa145a9941522f0ec7a5",
                          "typeString": "literal_string \"test post\""
                        },
                        "value": "test post"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c82c94eb1dc2264bf2e4b62d6dba42b5ee19bae7058faa145a9941522f0ec7a5",
                          "typeString": "literal_string \"test post\""
                        }
                      ],
                      "expression": {
                        "id": 43456,
                        "name": "social",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43430,
                        "src": "440:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Social_$69",
                          "typeString": "contract Social"
                        }
                      },
                      "id": 43458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "447:10:19",
                      "memberName": "createPost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "440:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) external returns (uint256)"
                      }
                    },
                    "id": 43460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "440:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 43461,
                  "nodeType": "ExpressionStatement",
                  "src": "440:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 43463,
                                "name": "social",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43430,
                                "src": "490:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Social_$69",
                                  "typeString": "contract Social"
                                }
                              },
                              "id": 43464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "497:11:19",
                              "memberName": "getAllPosts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 68,
                              "src": "490:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Post_$10_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function () view external returns (struct Social.Post memory[] memory)"
                              }
                            },
                            "id": 43465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "490:20:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Post_$10_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Social.Post memory[] memory"
                            }
                          },
                          "id": 43467,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 43466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "511:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "490:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Post_$10_memory_ptr",
                            "typeString": "struct Social.Post memory"
                          }
                        },
                        "id": 43468,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "514:2:19",
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3,
                        "src": "490:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "518:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 43462,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2555,
                        2580,
                        2593,
                        2609,
                        2651,
                        2693,
                        2735,
                        2772,
                        2809,
                        2846,
                        390,
                        415,
                        445,
                        470,
                        529,
                        554,
                        584,
                        609,
                        2082,
                        2117
                      ],
                      "referencedDeclaration": 584,
                      "src": "481:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 43470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43471,
                  "nodeType": "ExpressionStatement",
                  "src": "481:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 43473,
                                "name": "social",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43430,
                                "src": "539:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Social_$69",
                                  "typeString": "contract Social"
                                }
                              },
                              "id": 43474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "546:11:19",
                              "memberName": "getAllPosts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 68,
                              "src": "539:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Post_$10_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function () view external returns (struct Social.Post memory[] memory)"
                              }
                            },
                            "id": 43475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "539:20:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Post_$10_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Social.Post memory[] memory"
                            }
                          },
                          "id": 43477,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 43476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "560:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "539:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Post_$10_memory_ptr",
                            "typeString": "struct Social.Post memory"
                          }
                        },
                        "id": 43478,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "563:7:19",
                        "memberName": "content",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "539:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "7465737420706f7374",
                        "id": 43479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "572:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c82c94eb1dc2264bf2e4b62d6dba42b5ee19bae7058faa145a9941522f0ec7a5",
                          "typeString": "literal_string \"test post\""
                        },
                        "value": "test post"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c82c94eb1dc2264bf2e4b62d6dba42b5ee19bae7058faa145a9941522f0ec7a5",
                          "typeString": "literal_string \"test post\""
                        }
                      ],
                      "id": 43472,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2555,
                        2580,
                        2593,
                        2609,
                        2651,
                        2693,
                        2735,
                        2772,
                        2809,
                        2846,
                        390,
                        415,
                        445,
                        470,
                        529,
                        554,
                        584,
                        609,
                        2082,
                        2117
                      ],
                      "referencedDeclaration": 2082,
                      "src": "530:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 43480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "530:54:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43481,
                  "nodeType": "ExpressionStatement",
                  "src": "530:54:19"
                }
              ]
            },
            "functionSelector": "d520d36b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCreatePost",
            "nameLocation": "406:14:19",
            "parameters": {
              "id": 43454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "420:2:19"
            },
            "returnParameters": {
              "id": 43455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:0:19"
            },
            "scope": 43516,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43515,
            "nodeType": "FunctionDefinition",
            "src": "597:212:19",
            "nodes": [],
            "body": {
              "id": 43514,
              "nodeType": "Block",
              "src": "656:153:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43491,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43485,
                        "src": "684:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 43488,
                        "name": "social",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43430,
                        "src": "666:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Social_$69",
                          "typeString": "contract Social"
                        }
                      },
                      "id": 43490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "673:10:19",
                      "memberName": "createPost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "666:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) external returns (uint256)"
                      }
                    },
                    "id": 43492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "666:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 43493,
                  "nodeType": "ExpressionStatement",
                  "src": "666:26:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 43495,
                                "name": "social",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43430,
                                "src": "712:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Social_$69",
                                  "typeString": "contract Social"
                                }
                              },
                              "id": 43496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "719:11:19",
                              "memberName": "getAllPosts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 68,
                              "src": "712:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Post_$10_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function () view external returns (struct Social.Post memory[] memory)"
                              }
                            },
                            "id": 43497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "712:20:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Post_$10_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Social.Post memory[] memory"
                            }
                          },
                          "id": 43499,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 43498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "733:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "712:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Post_$10_memory_ptr",
                            "typeString": "struct Social.Post memory"
                          }
                        },
                        "id": 43500,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "736:2:19",
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3,
                        "src": "712:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "740:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 43494,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2555,
                        2580,
                        2593,
                        2609,
                        2651,
                        2693,
                        2735,
                        2772,
                        2809,
                        2846,
                        390,
                        415,
                        445,
                        470,
                        529,
                        554,
                        584,
                        609,
                        2082,
                        2117
                      ],
                      "referencedDeclaration": 584,
                      "src": "703:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 43502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43503,
                  "nodeType": "ExpressionStatement",
                  "src": "703:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 43505,
                                "name": "social",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43430,
                                "src": "761:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Social_$69",
                                  "typeString": "contract Social"
                                }
                              },
                              "id": 43506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "768:11:19",
                              "memberName": "getAllPosts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 68,
                              "src": "761:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Post_$10_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function () view external returns (struct Social.Post memory[] memory)"
                              }
                            },
                            "id": 43507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "761:20:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Post_$10_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Social.Post memory[] memory"
                            }
                          },
                          "id": 43509,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 43508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "782:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "761:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Post_$10_memory_ptr",
                            "typeString": "struct Social.Post memory"
                          }
                        },
                        "id": 43510,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "785:7:19",
                        "memberName": "content",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "761:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 43511,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43485,
                        "src": "794:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 43504,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2555,
                        2580,
                        2593,
                        2609,
                        2651,
                        2693,
                        2735,
                        2772,
                        2809,
                        2846,
                        390,
                        415,
                        445,
                        470,
                        529,
                        554,
                        584,
                        609,
                        2082,
                        2117
                      ],
                      "referencedDeclaration": 2082,
                      "src": "752:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 43512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "752:50:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43513,
                  "nodeType": "ExpressionStatement",
                  "src": "752:50:19"
                }
              ]
            },
            "functionSelector": "4e070ccb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_CreatePost",
            "nameLocation": "606:19:19",
            "parameters": {
              "id": 43486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43485,
                  "mutability": "mutable",
                  "name": "content",
                  "nameLocation": "640:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 43515,
                  "src": "626:21:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43484,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "625:23:19"
            },
            "returnParameters": {
              "id": 43487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "656:0:19"
            },
            "scope": 43516,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43426,
              "name": "Test",
              "nameLocations": [
                "189:4:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12285,
              "src": "189:4:19"
            },
            "id": 43427,
            "nodeType": "InheritanceSpecifier",
            "src": "189:4:19"
          }
        ],
        "canonicalName": "SocialTest",
        "contractDependencies": [
          69
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43516,
          12285,
          12234,
          7770,
          7445,
          6652,
          4592,
          3854,
          2361,
          2427,
          2424
        ],
        "name": "SocialTest",
        "nameLocation": "175:10:19",
        "scope": 43517,
        "usedErrors": [],
        "usedEvents": [
          75,
          79,
          83,
          87,
          91,
          95,
          99,
          103,
          109,
          115,
          123,
          131,
          137,
          143,
          149,
          155,
          2449,
          2454,
          2459,
          2466,
          2473,
          2480
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 19
}